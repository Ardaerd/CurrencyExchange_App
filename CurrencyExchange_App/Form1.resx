<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>